apply from: file('gradle/project.gradle')

subprojects {
    apply from: file("${rootDir}/gradle/quality.gradle")

    group = 'core.aws'
    version = '1.7.3'
}

def awsVersion = '1.10.52'

project(':cmn') {
    apply plugin: 'application'
    mainClassName = 'Main'

    afterEvaluate {
        startScripts {
            doLast {
                windowsScript.text = windowsScript.text.replaceFirst('set DEFAULT_JVM_OPTS=', 'set DEFAULT_JVM_OPTS="-Dcmn.ansible=%~dp0../ansible"')
                unixScript.text = unixScript.text.replaceFirst('DEFAULT_JVM_OPTS=""', 'DEFAULT_JVM_OPTS=\'-Dcmn.ansible=\\$APP_HOME/ansible\'')
            }
        }
    }

    dependencies {
        compile(
                "com.amazonaws:aws-java-sdk-autoscaling:${awsVersion}",
                "com.amazonaws:aws-java-sdk-ec2:${awsVersion}",
                "com.amazonaws:aws-java-sdk-elasticloadbalancing:${awsVersion}",
                "com.amazonaws:aws-java-sdk-cloudwatch:${awsVersion}",
                "com.amazonaws:aws-java-sdk-iam:${awsVersion}",
                "com.amazonaws:aws-java-sdk-s3:${awsVersion}",
                'org.slf4j:slf4j-api:1.7.12',
                'org.slf4j:jcl-over-slf4j:1.7.12',
                'ch.qos.logback:logback-classic:1.1.3',
                'com.jcraft:jsch:0.1.50',
                'org.apache.commons:commons-compress:1.5',
                'org.yaml:snakeyaml:1.13'
        )
        testCompile(
                'junit:junit:4.12',
                'org.mockito:mockito-core:1.10.19'
        )
    }
}